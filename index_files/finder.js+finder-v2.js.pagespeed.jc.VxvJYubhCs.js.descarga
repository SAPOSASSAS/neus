var mod_pagespeed_YsJqh4QEkB = "(function() {\n    let Resource = function (form, name, dontReset) {\n        this.name = name;\n        this.$select = form.find('select[name=\"' + name + '\"]');\n\n        if (dontReset || this.$select.find('option').length > 1) {\n            this.init();\n        } else {\n            this.reset();\n        }\n    };\n    Resource.prototype = {\n        load: function (params) {\n            let self = this;\n            params = params + '&resource=' + this.name;\n\n            let request = new WsRequest({\n                url: '/finder/resource/',\n                data: params,\n                headers: {}\n            });\n            request.get().done(function(data) {\n                self.$select.removeAttr('disabled')\n                    .append(data).selectpicker('refresh');\n            });\n        },\n        reset: function () {\n            this.$select.val('').attr('disabled', 'disabled');\n            this.$select.find('option:not(:first)').remove();\n            this.$select.selectpicker('refresh');\n            this._reset && this._reset();\n        },\n        init: function (form) {\n        },\n        changed: function (value) {\n        }\n    };\n\n    let FormResult = function (form) {\n        this.form = form;\n        this.result = form.next('.ajax-result');\n    };\n    FormResult.prototype = {\n        loadingClass: 'is-loading',\n        load: function (params) {\n            let request = new WsRequest({\n                url: this.form.attr('action'),\n                data: params\n            });\n\n            request.get().done(data => {\n                this.result.html(data);\n                this.endLoading();\n            });\n            this.startLoading();\n        },\n        startLoading: function() {\n            this.result.addClass(this.loadingClass).show();\n        },\n        endLoading: function() {\n            this.result.removeClass(this.loadingClass);\n        },\n        reset: function () {\n            this.result.hide().html('');\n        }\n    };\n\n    let RedirectResult = function(form) {\n        this.form = form;\n        this.result = form.find('.finder-redirecting');\n    };\n    RedirectResult.prototype = {\n        loadingClass: 'is-loading',\n        load: function(params) {\n            let request = new WsRequest({\n                url: this.form.attr('action'),\n                data: params,\n            });\n            request.get().done(data => {\n                if (data.redirect) {\n                    window.location.href = data.redirect;\n                }\n            });\n            this.startLoading();\n        },\n        startLoading: function() {\n            this.result.addClass(this.loadingClass);\n        },\n        reset: function() {\n\n        }\n    };\n\n    let ResourceChain = function (form, chain, resultClass, prototypes) {\n        this.form = form;\n        let resources = this.resources = {};\n        this.chain = chain.map(function (resourceName, index) {\n            let dontReset = index === 0;\n            let resource = new Resource(form, resourceName, dontReset);\n\n            if (prototypes && prototypes[resourceName]) {\n                $.extend(resource, prototypes[resourceName]);\n                resource.init(form);\n            }\n            resources[resourceName] = resource;\n            return resource;\n        });\n        this.final = new resultClass(form);\n        this.nextResource = this.chain[0];\n        this.bindEvents();\n\n        this.loadNext();\n    };\n    ResourceChain.prototype = {\n        loadNext: function () {\n            if (this.nextResource === this.final) {\n                this.loading = true;\n            }\n            this.nextResource.load(this.params());\n        },\n        changed: function (index, value) {\n            this.chain[index].changed(value);\n\n            this.final.reset();\n            for (let i = index + 1; i < this.chain.length; ++i) {\n                this.chain[i].reset();\n            }\n\n            if (value) {\n                this.nextResource = this.final;\n                if (index + 1 < this.chain.length) {\n                    this.nextResource = this.chain[index + 1];\n                }\n\n                this.loadNext();\n            }\n        },\n        params: function () {\n            return this.form.serialize();\n        },\n        bindEvents: function () {\n            let self = this;\n            this.form.find('select').change(function () {\n                let resourceName = $(this).attr('name');\n                let value = $(this).val();\n                $.each(self.chain, function (index) {\n                    if (this.name === resourceName) {\n                        self.changed(index, value);\n                    }\n                });\n            });\n        }\n    };\n\n    let PresisionSelectExtension = function (baseField, precisionSelector) {\n        this.selector = precisionSelector;\n        this.selectSelector = ['[name=', baseField, '_precision]'].join('');\n        this.inputMinSelector = ['input[name=', baseField, '_min]'].join('');\n        this.inputMaxSelector = ['input[name=', baseField, '_max]'].join('');\n    };\n    PresisionSelectExtension.prototype = {\n        init: function (form) {\n            let self = this;\n            this.$precision = form.find(this.selector);\n            this.$precisionInput = this.$precision.find(this.selectSelector);\n            this.auxInit();\n\n            this.$precisionInput.on('click', function (e) {\n                e.stopPropagation();\n            }).change(function (e) {\n                self.$select.change();\n            });\n        },\n        auxInit: function() {\n        },\n        changed: function (value) {\n            if (!value) {\n                this._reset();\n            } else {\n                this.$precision.show();\n                this.updateMinMax();\n            }\n        },\n        _reset: function () {\n            this.$precision.hide();\n            this.$precision.find(this.inputMinSelector).val('');\n            this.$precision.find(this.inputMaxSelector).val('');\n        },\n        updateMinMax: function () {\n            let value = Number(this.$select.val());\n            let precision = Math.abs(Number(this.$precisionInput.val()));\n\n            let $inputMin = this.$precision.find(this.inputMinSelector);\n            let $inputMax = this.$precision.find(this.inputMaxSelector);\n\n            if (isNaN(precision)) {\n                $inputMin.val('');\n                $inputMax.val('');\n            } else {\n                $inputMin.val(value - precision);\n                $inputMax.val(value + precision);\n            }\n        }\n    };\n\n    ResourceChain.FormResult = FormResult;\n    ResourceChain.RedirectResult = RedirectResult;\n    ResourceChain.PresisionSelectExtension = PresisionSelectExtension;\n    window.ResourceChain = ResourceChain;\n})();\n";
var mod_pagespeed_6Tgi8$GlB9 = "window.sublogin.done(function () {\n    let displayNoneClass = 'd-none';\n\n    $('#finder .selectpicker').removeClass('btn').selectpicker();\n    $('#finder a.change-system').click(function (e) {\n        e.preventDefault();\n\n        $(this).closest('.tire-form-pane')\n            .addClass(displayNoneClass)\n            .siblings()\n            .removeClass(displayNoneClass);\n    });\n\n    ResourceChain.RedirectResult.prototype.startLoading = function() {\n        this.result.addClass('fa-spin').removeClass(displayNoneClass);\n    };\n\n    function initFinder() {\n        new ResourceChain(\n            $('#vehicle_form'),\n            ['make', 'year', 'model'],\n            ResourceChain.RedirectResult\n        );\n        new ResourceChain(\n            $('#tire_form'),\n            ['tire_width', 'aspect_ratio', 'rim_diameter'],\n            ResourceChain.FormResult\n        );\n\n        new ResourceChain(\n            $('#wheel_form'),\n            ['rim_diameter', 'rim_width', 'offset', 'cb', 'bolt_pattern'],\n            ResourceChain.FormResult,\n            {\n                offset: new ResourceChain.PresisionSelectExtension('offset', '.offset-precision'),\n                cb: new ResourceChain.PresisionSelectExtension('cb', '.cb-precision')\n            }\n        );\n\n        new ResourceChain(\n            $('#tire_form_hf'),\n            ['tire_diameter', 'tire_section_width', 'rim_diameter_hf'],\n            ResourceChain.FormResult\n        );\n    }\n\n    let openSearchBtn = $('#search-drop');\n    if (openSearchBtn.hasClass('collapsed')) {\n        initFinder();\n    } else {\n        openSearchBtn.one('click', initFinder);\n    }\n});\n";
